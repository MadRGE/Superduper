// Script para generar SQL de inserciÃ³n de trÃ¡mites desde el catÃ¡logo

const fs = require('fs');
const path = require('path');

// Importar el catÃ¡logo (simulado ya que no podemos usar import en Node sin configuraciÃ³n)
const catalogoText = fs.readFileSync(
  path.join(__dirname, '../src/data/catalogoTramitesCompleto.ts'),
  'utf-8'
);

// FunciÃ³n para generar UUID simulado (para ejemplo)
function generateUUID() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    const r = Math.random() * 16 | 0;
    const v = c === 'x' ? r : (r & 0x3 | 0x8);
    return v.toString(16);
  });
}

// Mapeo de organismos
const organismos = {
  'ANMAT': { sigla: 'ANMAT', nombre: 'AdministraciÃ³n Nacional de Medicamentos, Alimentos y TecnologÃ­a MÃ©dica' },
  'SENASA': { sigla: 'SENASA', nombre: 'Servicio Nacional de Sanidad y Calidad Agroalimentaria' },
  'ENACOM': { sigla: 'ENACOM', nombre: 'Ente Nacional de Comunicaciones' },
  'ANMaC': { sigla: 'ANMaC', nombre: 'Agencia Nacional de Materiales Controlados' },
  'SEDRONAR': { sigla: 'SEDRONAR', nombre: 'SecretarÃ­a de PolÃ­ticas Integrales sobre Drogas' },
  'SIC': { sigla: 'SIC', nombre: 'SecretarÃ­a de Industria y Comercio' },
  'FAUNA': { sigla: 'FAUNA', nombre: 'DirecciÃ³n Nacional de Fauna y Flora Silvestre' }
};

// TrÃ¡mites principales del catÃ¡logo (versiÃ³n simplificada)
const tramites = [
  // ANMAT - Alimentos
  {
    codigo: 'RNPA-001',
    nombre: 'Registro Nacional de Producto Alimenticio (RNPA)',
    descripcion: 'Registro de producto alimenticio nacional o importado',
    organismo: 'ANMAT',
    sla_dias: 45,
    vigencia_anos: 5,
    categoria: 'Alimentos'
  },
  {
    codigo: 'RNE-001',
    nombre: 'Registro Nacional de Establecimiento (RNE)',
    descripcion: 'HabilitaciÃ³n de establecimiento elaborador/fraccionador/importador',
    organismo: 'ANMAT',
    sla_dias: 60,
    vigencia_anos: 5,
    categoria: 'Alimentos'
  },
  {
    codigo: 'RNPA-MOD',
    nombre: 'ModificaciÃ³n RNPA',
    descripcion: 'Cambios en fÃ³rmula, rÃ³tulo o datos del producto',
    organismo: 'ANMAT',
    sla_dias: 30,
    vigencia_anos: null,
    categoria: 'Alimentos'
  },
  {
    codigo: 'RNPA-REN',
    nombre: 'RenovaciÃ³n RNPA',
    descripcion: 'RenovaciÃ³n de registro vencido o prÃ³ximo a vencer',
    organismo: 'ANMAT',
    sla_dias: 45,
    vigencia_anos: 5,
    categoria: 'Alimentos'
  },

  // ANMAT - CosmÃ©ticos
  {
    codigo: 'COS-G1',
    nombre: 'Registro Producto CosmÃ©tico Grado I',
    descripcion: 'Productos de riesgo mÃ­nimo - AdmisiÃ³n automÃ¡tica',
    organismo: 'ANMAT',
    sla_dias: 15,
    vigencia_anos: 5,
    categoria: 'CosmÃ©ticos'
  },
  {
    codigo: 'COS-G2',
    nombre: 'Registro Producto CosmÃ©tico Grado II',
    descripcion: 'Productos riesgo moderado - EvaluaciÃ³n completa',
    organismo: 'ANMAT',
    sla_dias: 60,
    vigencia_anos: 5,
    categoria: 'CosmÃ©ticos'
  },

  // ANMAT - Dispositivos MÃ©dicos
  {
    codigo: 'DM-CLASE-I',
    nombre: 'Registro Dispositivo MÃ©dico Clase I',
    descripcion: 'Bajo riesgo - NotificaciÃ³n',
    organismo: 'ANMAT',
    sla_dias: 30,
    vigencia_anos: 5,
    categoria: 'Dispositivos MÃ©dicos'
  },
  {
    codigo: 'DM-CLASE-II',
    nombre: 'Registro Dispositivo MÃ©dico Clase II',
    descripcion: 'Riesgo moderado - Certificado',
    organismo: 'ANMAT',
    sla_dias: 90,
    vigencia_anos: 5,
    categoria: 'Dispositivos MÃ©dicos'
  },

  // SENASA
  {
    codigo: 'RENSPA',
    nombre: 'Registro Nacional Sanitario de Productores Agropecuarios',
    descripcion: 'InscripciÃ³n de establecimiento productivo',
    organismo: 'SENASA',
    sla_dias: 30,
    vigencia_anos: null,
    categoria: 'ProducciÃ³n Agropecuaria'
  },
  {
    codigo: 'CUA',
    nombre: 'Certificado Ãšnico de Aptitud',
    descripcion: 'HabilitaciÃ³n para exportaciÃ³n de productos',
    organismo: 'SENASA',
    sla_dias: 15,
    vigencia_anos: 1,
    categoria: 'ExportaciÃ³n'
  },
  {
    codigo: 'TRAZABILIDAD',
    nombre: 'Registro de Trazabilidad Animal',
    descripcion: 'Sistema de identificaciÃ³n y seguimiento',
    organismo: 'SENASA',
    sla_dias: 10,
    vigencia_anos: null,
    categoria: 'Trazabilidad'
  },

  // ENACOM
  {
    codigo: 'HOM-RF',
    nombre: 'HomologaciÃ³n de Equipos de RF',
    descripcion: 'CertificaciÃ³n de equipos de radiofrecuencia',
    organismo: 'ENACOM',
    sla_dias: 45,
    vigencia_anos: null,
    categoria: 'Telecomunicaciones'
  },
  {
    codigo: 'LICENCIA-COM',
    nombre: 'Licencia de Servicios de ComunicaciÃ³n',
    descripcion: 'AutorizaciÃ³n para operar servicios',
    organismo: 'ENACOM',
    sla_dias: 90,
    vigencia_anos: 15,
    categoria: 'Telecomunicaciones'
  },

  // ANMaC
  {
    codigo: 'CLU',
    nombre: 'Credencial de LegÃ­timo Usuario',
    descripcion: 'AutorizaciÃ³n para uso de armas de fuego',
    organismo: 'ANMaC',
    sla_dias: 180,
    vigencia_anos: 5,
    categoria: 'Material Controlado'
  },
  {
    codigo: 'CLUSE',
    nombre: 'InscripciÃ³n en CLUSE',
    descripcion: 'Registro de usuarios de material bÃ©lico',
    organismo: 'ANMaC',
    sla_dias: 90,
    vigencia_anos: null,
    categoria: 'Material Controlado'
  },

  // SEDRONAR (RENPRE)
  {
    codigo: 'RENPRE-INS',
    nombre: 'InscripciÃ³n en RENPRE',
    descripcion: 'Registro de operadores de precursores quÃ­micos',
    organismo: 'SEDRONAR',
    sla_dias: 60,
    vigencia_anos: 2,
    categoria: 'Precursores QuÃ­micos'
  },
  {
    codigo: 'RENPRE-REN',
    nombre: 'RenovaciÃ³n RENPRE',
    descripcion: 'ActualizaciÃ³n de registro',
    organismo: 'SEDRONAR',
    sla_dias: 45,
    vigencia_anos: 2,
    categoria: 'Precursores QuÃ­micos'
  },

  // SIC (Lealtad Comercial)
  {
    codigo: 'MAS',
    nombre: 'Marca Argentina de Servicios',
    descripcion: 'CertificaciÃ³n de origen argentino',
    organismo: 'SIC',
    sla_dias: 30,
    vigencia_anos: 2,
    categoria: 'CertificaciÃ³n'
  },

  // FAUNA/CITES
  {
    codigo: 'CITES-EXP',
    nombre: 'Permiso CITES de ExportaciÃ³n',
    descripcion: 'AutorizaciÃ³n para exportar especies protegidas',
    organismo: 'FAUNA',
    sla_dias: 30,
    vigencia_anos: null,
    categoria: 'Fauna Silvestre'
  },
  {
    codigo: 'CITES-IMP',
    nombre: 'Permiso CITES de ImportaciÃ³n',
    descripcion: 'AutorizaciÃ³n para importar especies protegidas',
    organismo: 'FAUNA',
    sla_dias: 30,
    vigencia_anos: null,
    categoria: 'Fauna Silvestre'
  }
];

// Generar SQL
let sql = `/*
  # CatÃ¡logo de TrÃ¡mites - Argentina

  Carga inicial de organismos y tipos de trÃ¡mites desde el catÃ¡logo completo.

  Organismos incluidos:
  - ANMAT (Medicamentos, Alimentos, CosmÃ©ticos)
  - SENASA (Sanidad Agropecuaria)
  - ENACOM (Telecomunicaciones)
  - ANMaC (Material Controlado)
  - SEDRONAR (Precursores QuÃ­micos)
  - SIC (Lealtad Comercial)
  - FAUNA (Fauna y Flora Silvestre)
*/

-- Insertar Organismos
`;

const organismosInsertados = {};
Object.entries(organismos).forEach(([key, org]) => {
  const id = generateUUID();
  organismosInsertados[org.sigla] = id;
  sql += `INSERT INTO organismos (id, codigo, sigla, nombre, activo, created_at, updated_at)
VALUES ('${id}', '${key}', '${org.sigla}', '${org.nombre}', true, NOW(), NOW())
ON CONFLICT (codigo) DO NOTHING;

`;
});

sql += `\n-- Insertar Tipos de TrÃ¡mites\n`;

tramites.forEach(tramite => {
  const id = generateUUID();
  const organismoId = organismosInsertados[tramite.organismo];
  const vigencia = tramite.vigencia_anos ? tramite.vigencia_anos : 'NULL';

  sql += `INSERT INTO tramite_tipos (id, codigo, nombre, descripcion, organismo_id, sla_dias, vigencia_anos, categoria, activo, created_at, updated_at)
VALUES (
  '${id}',
  '${tramite.codigo}',
  '${tramite.nombre.replace(/'/g, "''")}',
  '${tramite.descripcion.replace(/'/g, "''")}',
  '${organismoId}',
  ${tramite.sla_dias},
  ${vigencia},
  '${tramite.categoria}',
  true,
  NOW(),
  NOW()
)
ON CONFLICT (codigo) DO UPDATE SET
  nombre = EXCLUDED.nombre,
  descripcion = EXCLUDED.descripcion,
  sla_dias = EXCLUDED.sla_dias,
  vigencia_anos = EXCLUDED.vigencia_anos,
  categoria = EXCLUDED.categoria,
  updated_at = NOW();

`;
});

// Escribir archivo SQL
const outputPath = path.join(__dirname, '../supabase/migrations/20251005_catalogo_tramites.sql');
fs.writeFileSync(outputPath, sql);

console.log(`âœ… SQL generado exitosamente en: ${outputPath}`);
console.log(`ðŸ“Š Total organismos: ${Object.keys(organismos).length}`);
console.log(`ðŸ“‹ Total trÃ¡mites: ${tramites.length}`);
